{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/jun/Desktop/AlwaysRight-Demo/src/theme/index.ts"],"sourcesContent":["import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2563eb',\n      light: '#60a5fa',\n      dark: '#1d4ed8',\n    },\n    secondary: {\n      main: '#10b981',\n      light: '#34d399',\n      dark: '#059669',\n    },\n    background: {\n      default: '#f8fafc',\n      paper: '#ffffff',\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  typography: {\n    fontFamily: '\"Inter\", \"Helvetica\", \"Arial\", sans-serif',\n    h6: {\n      fontWeight: 600,\n    },\n  },\n  components: {\n    MuiAppBar: {\n      defaultProps: {\n        elevation: 0,\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n        },\n      },\n    },\n  },\n}); "],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,QAAQ,CAAA,GAAA,6MAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,SAAS;QACP,SAAS;YACP,MAAM;YACN,OAAO;YACP,MAAM;QACR;QACA,WAAW;YACT,MAAM;YACN,OAAO;YACP,MAAM;QACR;QACA,YAAY;YACV,SAAS;YACT,OAAO;QACT;IACF;IACA,OAAO;QACL,cAAc;IAChB;IACA,YAAY;QACV,YAAY;QACZ,IAAI;YACF,YAAY;QACd;IACF;IACA,YAAY;QACV,WAAW;YACT,cAAc;gBACZ,WAAW;YACb;QACF;QACA,WAAW;YACT,gBAAgB;gBACd,MAAM;oBACJ,eAAe;gBACjB;YACF;QACF;IACF;AACF"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/jun/Desktop/AlwaysRight-Demo/src/pages/_app.tsx"],"sourcesContent":["import { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { theme } from '../theme';\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Component {...pageProps} />\n    </ThemeProvider>\n  );\n}\n\nexport default MyApp; "],"names":[],"mappings":";;;;AAEA;AAFA;AACA;;;;;AAGA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,qBACE,uIAAC,iMAAA,CAAA,gBAAa;QAAC,OAAO,8GAAA,CAAA,QAAK;;0BACzB,uIAAC,wJAAA,CAAA,UAAW;;;;;0BACZ,uIAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/jun/Desktop/AlwaysRight-Demo/src/pages/orders.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip\n} from '@mui/material';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport { Order } from '../types/order';\n\n// 使用模拟数据\nconst mockOrders: Order[] = [\n  {\n    id: '1',\n    customerId: 'CUST001',\n    customerName: 'John Doe',\n    items: [\n      {\n        id: '1',\n        productId: 'PROD001',\n        productName: 'Sample Product 1',\n        quantity: 2,\n        price: 99.99,\n        subtotal: 199.98\n      }\n    ],\n    total: 199.98,\n    status: 'pending',\n    createdAt: '2024-03-20T10:00:00Z',\n    updatedAt: '2024-03-20T10:00:00Z',\n    shippingAddress: '123 Main St, City, Country',\n    paymentMethod: 'Credit Card'\n  }\n];\n\nexport default function Orders() {\n  const [orders] = useState<Order[]>(mockOrders);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'success';\n      case 'processing':\n        return 'warning';\n      case 'pending':\n        return 'info';\n      case 'cancelled':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  return (\n    <DashboardLayout>\n      <Box sx={{ p: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Orders\n        </Typography>\n        \n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Order ID</TableCell>\n                <TableCell>Customer</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Date</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow key={order.id}>\n                  <TableCell>{order.id}</TableCell>\n                  <TableCell>{order.customerName}</TableCell>\n                  <TableCell>${order.total.toFixed(2)}</TableCell>\n                  <TableCell>\n                    <Chip\n                      label={order.status}\n                      color={getStatusColor(order.status) as any}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    {new Date(order.createdAt).toLocaleDateString()}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </DashboardLayout>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AAaA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAeA,SAAS;AACT,MAAM,aAAsB;IAC1B;QACE,IAAI;QACJ,YAAY;QACZ,cAAc;QACd,OAAO;YACL;gBACE,IAAI;gBACJ,WAAW;gBACX,aAAa;gBACb,UAAU;gBACV,OAAO;gBACP,UAAU;YACZ;SACD;QACD,OAAO;QACP,QAAQ;QACR,WAAW;QACX,WAAW;QACX,iBAAiB;QACjB,eAAe;IACjB;CACD;AAEc,SAAS;IACtB,MAAM,CAAC,OAAO,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAW;IAEnC,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,uIAAC,yIAAA,CAAA,UAAe;kBACd,cAAA,uIAAC,0KAAA,CAAA,MAAG;YAAC,IAAI;gBAAE,GAAG;YAAE;;8BACd,uIAAC,+LAAA,CAAA,aAAU;oBAAC,SAAQ;oBAAK,YAAY;8BAAC;;;;;;8BAItC,uIAAC,2MAAA,CAAA,iBAAc;oBAAC,WAAW,gLAAA,CAAA,QAAK;8BAC9B,cAAA,uIAAC,gLAAA,CAAA,QAAK;;0CACJ,uIAAC,4LAAA,CAAA,YAAS;0CACR,cAAA,uIAAC,yLAAA,CAAA,WAAQ;;sDACP,uIAAC,4LAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,uIAAC,4LAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,uIAAC,4LAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,uIAAC,4LAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,uIAAC,4LAAA,CAAA,YAAS;sDAAC;;;;;;;;;;;;;;;;;0CAGf,uIAAC,4LAAA,CAAA,YAAS;0CACP,OAAO,GAAG,CAAC,CAAC,sBACX,uIAAC,yLAAA,CAAA,WAAQ;;0DACP,uIAAC,4LAAA,CAAA,YAAS;0DAAE,MAAM,EAAE;;;;;;0DACpB,uIAAC,4LAAA,CAAA,YAAS;0DAAE,MAAM,YAAY;;;;;;0DAC9B,uIAAC,4LAAA,CAAA,YAAS;;oDAAC;oDAAE,MAAM,KAAK,CAAC,OAAO,CAAC;;;;;;;0DACjC,uIAAC,4LAAA,CAAA,YAAS;0DACR,cAAA,uIAAC,6KAAA,CAAA,OAAI;oDACH,OAAO,MAAM,MAAM;oDACnB,OAAO,eAAe,MAAM,MAAM;oDAClC,MAAK;;;;;;;;;;;0DAGT,uIAAC,4LAAA,CAAA,YAAS;0DACP,IAAI,KAAK,MAAM,SAAS,EAAE,kBAAkB;;;;;;;uCAZlC,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBvC"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}